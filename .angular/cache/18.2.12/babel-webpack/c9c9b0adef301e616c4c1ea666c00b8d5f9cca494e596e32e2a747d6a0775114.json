{"ast":null,"code":"var _AuthGuard;\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    return this.authService.isLoggedIn().pipe(map(isLoggedIn => {\n      if (!isLoggedIn) {\n        this.router.navigate(['/login']);\n        return false;\n      }\n      return true;\n    }));\n  }\n}\n_AuthGuard = AuthGuard;\n_AuthGuard.ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n_AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _AuthGuard,\n  factory: _AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","AuthGuard","constructor","authService","router","canActivate","isLoggedIn","pipe","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\TaherCh\\Desktop\\STB\\stb-bank-app\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.authService.isLoggedIn().pipe(\r\n      map(isLoggedIn => {\r\n        if (!isLoggedIn) {\r\n          this.router.navigate(['/login']);\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n}"],"mappings":";AAIA,SAASA,GAAG,QAAQ,gBAAgB;;;;AAKpC,OAAM,MAAOC,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE,CAACC,IAAI,CACvCP,GAAG,CAACM,UAAU,IAAG;MACf,IAAI,CAACA,UAAU,EAAE;QACf,IAAI,CAACF,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC,CAAC,CACH;EACH;;aAbWP,SAAS;;mCAATA,UAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAATb,UAAS;EAAAc,OAAA,EAATd,UAAS,CAAAe,IAAA;EAAAC,UAAA,EAFR;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}