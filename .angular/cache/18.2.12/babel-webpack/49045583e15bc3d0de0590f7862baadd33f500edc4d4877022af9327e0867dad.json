{"ast":null,"code":"var _AuthService;\nimport { BehaviorSubject, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.systemInfo = new BehaviorSubject({\n      currentDateTime: '2024-12-06 23:00:10',\n      userLogin: 'tekteku'\n    });\n    this.apiUrl = 'https://your-backend-api.com/auth';\n    this.tokenKey = 'auth_token';\n    // Update datetime every second\n    setInterval(() => {\n      this.updateDateTime();\n    }, 1000);\n  }\n  updateDateTime() {\n    const now = new Date();\n    this.systemInfo.next({\n      ...this.systemInfo.value,\n      currentDateTime: now.toISOString().replace('T', ' ').slice(0, 19)\n    });\n  }\n  getSystemInfo() {\n    return this.systemInfo.asObservable();\n  }\n  getCurrentDateTime() {\n    return this.systemInfo.value.currentDateTime;\n  }\n  getUserLogin() {\n    return this.systemInfo.value.userLogin;\n  }\n  isLoggedIn() {\n    const token = localStorage.getItem(this.tokenKey);\n    return of(!!token);\n  }\n}\n_AuthService = AuthService;\n_AuthService.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\n_AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _AuthService,\n  factory: _AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","of","AuthService","constructor","http","systemInfo","currentDateTime","userLogin","apiUrl","tokenKey","setInterval","updateDateTime","now","Date","next","value","toISOString","replace","slice","getSystemInfo","asObservable","getCurrentDateTime","getUserLogin","isLoggedIn","token","localStorage","getItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\TaherCh\\Desktop\\STB\\stb-bank-app\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport interface SystemInfo {\r\n  currentDateTime: string;\r\n  userLogin: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private systemInfo = new BehaviorSubject<SystemInfo>({\r\n    currentDateTime: '2024-12-06 23:00:10',\r\n    userLogin: 'tekteku'\r\n  });\r\n  private apiUrl = 'https://your-backend-api.com/auth';\r\n  private tokenKey = 'auth_token';\r\n\r\n  constructor(private http: HttpClient) {\r\n    // Update datetime every second\r\n    setInterval(() => {\r\n      this.updateDateTime();\r\n    }, 1000);\r\n  }\r\n\r\n  private updateDateTime() {\r\n    const now = new Date();\r\n    this.systemInfo.next({\r\n      ...this.systemInfo.value,\r\n      currentDateTime: now.toISOString().replace('T', ' ').slice(0, 19)\r\n    });\r\n  }\r\n\r\n  getSystemInfo(): Observable<SystemInfo> {\r\n    return this.systemInfo.asObservable();\r\n  }\r\n\r\n  getCurrentDateTime(): string {\r\n    return this.systemInfo.value.currentDateTime;\r\n  }\r\n\r\n  getUserLogin(): string {\r\n    return this.systemInfo.value.userLogin;\r\n  }\r\n\r\n  isLoggedIn(): Observable<boolean> {\r\n    const token = localStorage.getItem(this.tokenKey);\r\n    return of(!!token);\r\n  }\r\n}"],"mappings":";AACA,SAASA,eAAe,EAAcC,EAAE,QAAQ,MAAM;;;AAWtD,OAAM,MAAOC,WAAW;EAQtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAPhB,KAAAC,UAAU,GAAG,IAAIL,eAAe,CAAa;MACnDM,eAAe,EAAE,qBAAqB;MACtCC,SAAS,EAAE;KACZ,CAAC;IACM,KAAAC,MAAM,GAAG,mCAAmC;IAC5C,KAAAC,QAAQ,GAAG,YAAY;IAG7B;IACAC,WAAW,CAAC,MAAK;MACf,IAAI,CAACC,cAAc,EAAE;IACvB,CAAC,EAAE,IAAI,CAAC;EACV;EAEQA,cAAcA,CAAA;IACpB,MAAMC,GAAG,GAAG,IAAIC,IAAI,EAAE;IACtB,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC;MACnB,GAAG,IAAI,CAACT,UAAU,CAACU,KAAK;MACxBT,eAAe,EAAEM,GAAG,CAACI,WAAW,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;KACjE,CAAC;EACJ;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACd,UAAU,CAACe,YAAY,EAAE;EACvC;EAEAC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAAChB,UAAU,CAACU,KAAK,CAACT,eAAe;EAC9C;EAEAgB,YAAYA,CAAA;IACV,OAAO,IAAI,CAACjB,UAAU,CAACU,KAAK,CAACR,SAAS;EACxC;EAEAgB,UAAUA,CAAA;IACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACjB,QAAQ,CAAC;IACjD,OAAOR,EAAE,CAAC,CAAC,CAACuB,KAAK,CAAC;EACpB;;eAtCWtB,WAAW;;mCAAXA,YAAW,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX5B,YAAW;EAAA6B,OAAA,EAAX7B,YAAW,CAAA8B,IAAA;EAAAC,UAAA,EAFV;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}